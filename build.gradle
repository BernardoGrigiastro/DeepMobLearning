buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

def mcVersion = "1.12.2"
def modMajor = "0"
def modMinor = "8"

version = "${mcVersion}-${modMajor}.${modMinor}"
group = "xt9.deepmoblearning" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "deepmoblearning"

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "1.12.2-14.23.1.2555"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
    }
}

dependencies {
    // compile against the JEI API but do not include it at runtime
    deobfProvided "mezz.jei:jei_${mcVersion}:4.8.5.135:api"
    // at runtime, use the full JEI jar
    runtime "mezz.jei:jei_${mcVersion}:4.8.5.135"
    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources {
    compileJava.options.encoding = "UTF-8"
    compileTestJava.options.encoding = "UTF-8"

    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", mcVersion

    // replace stuff in mcmod.info, nothing else (THIS WILL ONLY RUN ON GRADLE BUILDS)
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand([
            'version'        : project.version,
            'mcversion'      : mcVersion,
        ])
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    // Exclude the dev helpers from our build
    sourceSets {
        main {
            java {
                exclude '**/DevSpawn.java'
                exclude '**/DevTooltip.java'
            }
        }
    }
}
